#!/bin/sh
#
# php-fcgi      This shell script starts and stops PHP FastCGI processes.
#
# chkconfig:   2345 80 30
# description: PHP is an interpreted language used within web pages
# processname: php.fcgi
# pidfile:  /var/run/php-fcgi.pid

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Source php-fcgi configureation.
. /etc/sysconfig/php-fcgi

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down "PHP FastCGI"
		exit 1
	fi
else
	exit 0
fi

if [ -z "$PHP_FCGI_CHILDREN" ]; then
	PHP_FCGI_CHILDREN=5
fi
if [ -z "$PHP_FCGI_BINARY" ]; then
	PHP_FCGI_BINARY=/usr/bin/php.fcgi
fi

start() {
	# Start daemons.
	if [ ! -f /var/lock/subsys/php-fcgi ]; then
		export PHP_FCGI_MAX_REQUESTS
		export FCGI_WEB_SERVER_ADDRS

		msg_starting "PHP FastCGI"
		daemon /usr/sbin/spawn-fcgi -P /var/run/php-fcgi.pid $SPAWNARGS -f $PHP_FCGI_BINARY -C $PHP_FCGI_CHILDREN

		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/php-fcgi
	else
		msg_already_running "PHP FastCGI"
	fi
}

stop() {
	# Stop daemons.
	if [ -f /var/lock/subsys/php-fcgi ]; then
		msg_stopping "PHP FastCGI"
		killproc --pidfile php-fcgi.pid php.fcgi
		rm -f /var/lock/subsys/php-fcgi >/dev/null 2>&1
	else
		msg_not_running "PHP FastCGI"
	fi
}

RETVAL=0
# See how we were called.
case "$1" in
start)
	start
	;;
stop)
	stop
	;;
restart)
	stop
	start
	exit $?
	;;
status)
	status php-fcgi $PHP_FCGI_BINARY
	exit $?
	;;
reload|force-reload)
	if [ -f /var/lock/subsys/php-fcgi ]; then
		msg_reloading "PHP FastCGI"
		killproc php.fcgi -HUP
		RETVAL=$?
	else
		msg_not_running "PHP FastCGI"
		exit 7
	fi
	;;
*)
	msg_usage "$0 {start|stop|restart|reload|force-reload|status}"
	exit 3
esac

exit $RETVAL
